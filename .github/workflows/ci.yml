# ci.yml
name: CI

on: 
  push:
    branches: [ main , stage ]
  pull_request:
    branches: [ main, stage, dev ]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
                
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm install


  lint-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: |
          npm run lint:js
      - name: Run prettier
        run: |
          npm run format
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: |
          npm run test
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]
    needs: [lint-format, unit-test]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: |
          npm run build
  e2e-tests-chrome:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    needs: build
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Use Node.js ${{ matrix.node }}
       uses: actions/setup-node@v4
       with:
         node-version: 20
     - name: Install dependencies
       run: npm ci
     - name: Run build
       run: |
          npm run build
     - name: start app
       uses: cypress-io/github-action@v6
       with: 
         start: npm start
         wait-on: 'http://localhost:3000' # Waits for above 
     - name: Run cypress  
       run: |
              npx cypress run --record --parallel --group chrome --browser chrome
       
       # Records to Cypress Cloud
       # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
         
       env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          # overwrite commit message sent to Cypress Cloud
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}

  e2e-tests-firefox:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: |
          npm run build
      - name: Run cypress
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3000' # Waits for above 
      - name: Run cypress
        run: |
          npx cypress run --record --parallel --group firefox --browser firefox
          
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
         
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # overwrite commit message sent to Cypress Cloud
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}

          